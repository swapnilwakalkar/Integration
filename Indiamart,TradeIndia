Get leads from trade india

public class GetLeadsFromTradeIndia implements Schedulable {
    
     private static final String URL = 'https://www.tradeindia.com/utils/my_inquiry.html?userid=1559850&profile_id=1864910&key=7691361075cce7ee188093fa36606b8a';
  @future(callout=true)  
    public static void fetchDataFromURL() {
        // Calculate the start and end date/time dynamically
        DateTime currentDateTime = DateTime.now();
        DateTime startDateTime = currentDateTime.addDays(-1);
        DateTime endDateTime = currentDateTime;
        
        // Format the start and end date/time in the required format
        String startDateTimeStr = startDateTime.format('yyyy-MM-dd');
        String endDateTimeStr = endDateTime.format('yyyy-MM-dd');
        
        // Construct the dynamic URL with the start and end date/time parameters
        String dynamicURL = URL + '&from_date=' + startDateTimeStr + '&to_date=' + endDateTimeStr;
        
        HttpRequest httpRequest = new HttpRequest();
        HttpResponse httpResponse = new HttpResponse();
        Http http = new Http();
        
        httpRequest.setEndpoint(dynamicURL);
        httpRequest.setMethod('GET');
        
        try {
            httpResponse = http.send(httpRequest);
            String responseBody = httpResponse.getBody();
            System.debug('Response: ' + responseBody);
            createLeadsFromData(responseBody);
        } catch (Exception ex) {
            System.debug('Error in HTTP request: ' + ex.getMessage());
        }
    }
    // Method to parse the retrieved data and create Lead records
    public static void createLeadsFromData(String data) {
    if (data != null) {
        List<Object> responseList = (List<Object>) JSON.deserializeUntyped(data);
        
        List<Leads__c> leadsToInsert = new List<Leads__c>();
        
        for (Object obj : responseList) {
            Map<String, Object> leadData = (Map<String, Object>) obj;
            
            Leads__c lead = new Leads__c();
          	lead.Mobile__c  = (String) leadData.get('receiver_mobile');
            lead.LastName__c  = (String) leadData.get('receiver_name');
            lead.Company__c  = (String) leadData.get('sender_co');
            lead.Lead_Source__c = 'TradeIndia';
            // Set other fields as needed, using the correct API names
            
            leadsToInsert.add(lead);
        }
        
        if (!leadsToInsert.isEmpty()) {
            Database.SaveResult[] saveResults = Database.insert(leadsToInsert, false);
            for (Database.SaveResult saveResult : saveResults) {
                if (saveResult.isSuccess()) {
                    System.debug('Lead inserted successfully. ID: ' + saveResult.getId());
                } else {
                    System.debug('Error inserting Lead: ' + saveResult.getErrors()[0].getMessage());
                }
            }
        }
    }
}
    
    // Implement the execute method required by the Schedulable interface
    public void execute(SchedulableContext sc) {
        fetchDataFromURL();
    }
}


-----------------------------------------------------------------------------------------------
Get Leads from INdiaMart


global class GetLeadsFromIndiaMart implements Schedulable {
    
    // Specify the URL here
    private static final String URL = 'https://mapi.indiamart.com/wservce/crm/crmListing/v2/?glusr_crm_key=mR27Grpr7XzGSPes7nCN7luKo1TGnTM='; //&start_time=10-Jul-202309:00:00&end_time=12-Jul-202309:00:00

    // Method to perform HTTP callout
    @future(callout=true)
    global static void fetchDataFromURL() {
        HttpRequest httpRequest = new HttpRequest();
        HttpResponse httpResponse = new HttpResponse();
        Http http = new Http();

        httpRequest.setEndpoint(URL);
        httpRequest.setMethod('GET');

        try {
            httpResponse = http.send(httpRequest);
            String responseBody = httpResponse.getBody();
            System.debug('Response: ' + responseBody);
            createLeadsFromData(responseBody);
        } catch (Exception ex) {
            System.debug('Error in HTTP request: ' + ex.getMessage());
        }
    }
    
    // Method to parse the retrieved Data and create Lead records
    global static void createLeadsFromData(String data) {
        if (data != null) {
            Map<String, Object> parsedData = (Map<String, Object>) JSON.deserializeUntyped(data);

            List<Object> responseList = (List<Object>) parsedData.get('RESPONSE');

            List<Leads__c> leadsToInsert = new List<Leads__c>();

            for (Object obj : responseList) {
                Map<String, Object> leadData = (Map<String, Object>) obj;

                Leads__c lead = new Leads__c();
              //  lead.Mobile__c  = (String) leadData.get('SENDER_MOBILE');
                lead.LastName__c  = (String) leadData.get('SENDER_NAME');
                lead.Company__c  = (String) leadData.get('SENDER_COMPANY');
                lead.Lead_Source__c = 'IndiaMart';
                // Set other fields as needed, using the correct API names

                leadsToInsert.add(lead);
            }

            if (!leadsToInsert.isEmpty()) {
                Database.SaveResult[] saveResults = Database.insert(leadsToInsert, false);
                for (Database.SaveResult saveResult : saveResults) {
                    if (saveResult.isSuccess()) {
                        System.debug('Lead inserted successfully. ID: ' + saveResult.getId());
                    } else {
                        System.debug('Error inserting Lead: ' + saveResult.getErrors()[0].getMessage());
                    }
                }
            }
        }
    }
    
    // Implement the execute method required by the Schedulable interface
    global void execute(SchedulableContext sc) {
        fetchDataFromURL();
    }
}
